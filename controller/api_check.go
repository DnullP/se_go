/*
 * air_condition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package controller

import (
	"strconv"

	dto "github.com/DnullP/se_work/model/DTO"
	"github.com/DnullP/se_work/model/restAPI/receive"
	"github.com/DnullP/se_work/model/restAPI/response"
	getService "github.com/DnullP/se_work/utils/service"
	"github.com/gin-gonic/gin"
)

// CheckInPost - check_in Copy
// CheckInPost handles the HTTP POST request for checking in a guest.
// It binds the JSON data from the request body to the CheckInReceive struct,
// parses the room ID from the query parameter, creates a CheckInfo object,
// and calls the CheckIn method of the CheckService.
// Finally, it returns a JSON response with the status "success!".
func CheckInPost(c *gin.Context) {
	checkInRecieve := receive.CheckInReceive{}
	c.BindJSON(&checkInRecieve)

	roomID, err := strconv.ParseUint(c.Query("room_id"), 10, 64)
	if err != nil {
		panic(err)
	}

	checkIn := dto.CheckInfo{
		GuestName: checkInRecieve.GuestName,
		RoomID:    uint(roomID),
	}

	getService.GetCheckService().CheckIn(checkIn)

	response_client := response.Status{}
	response_client.Status = "success!"
	c.JSON(200, response_client)
}

// CheckOutPost - check_out Copy
// CheckOutPost handles the HTTP POST request for checking out a guest.
// It binds the JSON data from the request body to the CheckOutReceive struct,
// parses the room ID from the query parameter, creates a CheckInfo object,
// and calls the CheckOut method of the CheckService.
// Finally, it returns a JSON response with the status "success!".
func CheckOutPost(c *gin.Context) {
	checkOutRecieve := receive.CheckOutReceive{}
	c.BindJSON(&checkOutRecieve)

	roomID, err := strconv.ParseUint(c.Query("room_id"), 10, 64)
	if err != nil {
		panic(err)
	}

	checkOut := dto.CheckInfo{
		GuestName: checkOutRecieve.GuestName,
		RoomID:    uint(roomID),
	}

	getService.GetCheckService().CheckOut(checkOut)

	response_client := response.Status{}
	response_client.Status = "success!"
	c.JSON(200, response_client)
}
